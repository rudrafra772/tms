name: CI/CD for Docker Image
permissions:
  contents: read

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: production   # <- enables access to environment secrets

    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Generate .env dynamically from example.env
      - name: Generate .env from example.env
        shell: bash
        run: |
          echo "Generating .env from example.env..."

          # Export all GitHub secrets dynamically without touching readonly vars
          for secret_name in $(compgen -v | grep '^INPUT_'); do
            export "${secret_name#INPUT_}=${!secret_name}"
          done

          # Also export only the secrets GitHub exposes (from secrets context)
          for secret_name in $(compgen -v | grep -v '^GITHUB_'); do
            # Skip readonly variables
            if [[ "$secret_name" =~ ^(BASHOPTS|PIPESTATUS|PPID|SHELLOPTS)$ ]]; then
              continue
            fi
            export "$secret_name=${!secret_name}"
          done

          # Replace placeholders in example.env with actual secret values
          envsubst < example.env > .env
          echo ".env generated successfully"

      # Step 4: Build the Docker image
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag 7721110/tms:latest

      # Step 5: Push the Docker image
      - name: Push the Docker image
        run: docker push 7721110/tms:latest
