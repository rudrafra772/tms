name: CI/CD for Docker Image
permissions:
  contents: read

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: production


    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Log in to Docker Hub (or other container registry)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Generate .env dynamically
        run: |
          echo "SECREAT_KEY=${{ secrets.SECREAT_KEY }}" >> .env
          echo "ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}" >> .env
          echo "DEBUG=${{ secrets.DEBUG }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "TINYMCE_API_KEY=${{ secrets.TINYMCE_API_KEY }}" >> .env
       
      # Step 3: Build the Docker image
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag 7721110/tms:latest --build-arg ENV_FILE=.env

      # Step 4: Push the Docker image
      - name: Push Docker image
        run: docker push 7721110/tms:latest
